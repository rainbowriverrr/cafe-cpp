//
//  OrderMaster.hpp
//

#ifndef OrderMaster_hpp
#define OrderMaster_hpp

#include <map>
#include <string>

#include "Model.hpp"

/**
 * Class representing a row of the OrderMaster table.
 * @author Julian Koksal
 * @date 2022-11-07
 */
class OrderMaster : public Model {
   public:
    /**
     * Constructor creates a OrderMaster object initialized with the given values.
     * @param orderNumber The order number (primary key).
     * @param orderedBy Name of the customer of who placed the order.
     * @param orderDate The date and time of the order.
     * @param isComplete Is the order completed.
     */
    OrderMaster(int orderNumber = 0, std::string orderedBy = "", std::string orderDate = "", bool isComplete = 0);

    /**
     * @brief Constructor creates a OrderMaster object initialized with the given values.
     * @param orderNumber The order number (primary key).
     * @param orderedBy Name of the customer of who placed the order.
     * @param orderDate The date and time of the order.
     * @param isComplete Is the order completed.
     * @param sessionID The session ID of the user.
     */
    OrderMaster(int orderNumber, std::string orderedBy, std::string orderDate, bool isComplete, std::string sessionID, std::string status);

    /**
     * Destructor.
     */
    ~OrderMaster();

    /**
     * Gets the order number.
     * @return orderNumber
     */
    int getOrderNumber();

    /**
     * Gets orderedBy.
     * @return orderedBy
     */
    std::string getOrderedBy();

    /**
     * Gets the order date.
     * @return orderDate
     */
    std::string getOrderDate();

    /**
     * @brief Gets the session ID.
     * @return sessionID
     */
    std::string getSessionID();

    /**
     * @brief Get the status of the order.
     *
     * @return std::string
     */
    std::string getStatus();

    bool getIsComplete();

    /**
     * Sets orderedBy.
     * @param val The new value.
     */
    void setOrderedBy(std::string val);

    /**
     * Sets orderDate.
     * @param val The new value.
     */
    void setOrderDate(std::string val);

    /**
     * Sets isComplete.
     * @param val The new value.
     */
    void setIsComplete(bool val);

    /**
     * @brief Sets the session ID.
     * @param val The new value.
     */
    void setSessionID(std::string val);

    /**
     * @brief Sets the status of the order.
     * @param val The new value.
     */
    void setStatus(std::string val);

   private:
    /** The order number (primary key). */
    int orderNumber;

    /** Name of the customer of who placed the order. */
    std::string orderedBy;

    /** The date and time of the order. */
    std::string orderDate;

    /** Is the order completed. */
    bool isComplete;

    /** The session ID of the user. */
    std::string sessionID;

    /** The status of the Order, can be "cart", or "ordered"*/
    std::string status;

    virtual std::string tableName() const override;
    virtual std::vector<std::string> columns() const override;
    virtual std::set<std::string> keys() const override;
    virtual bool isAutoGeneratedKey() const override;
    virtual std::map<std::string, std::any> toMap() const override;
    virtual Model* fromMap(std::map<std::string, std::any> mMap) const override;
};

#endif /* OrderMaster_hpp */
