//
//  vOrderSales.cpp
//
//  Created by Julian Koksal on 2022-11-19.
//

#include "vOrderSales.hpp"

vOrderSales::vOrderSales(std::string salesDate, std::string menuItemName, int totalQuantity, double totalRevenue, bool isAllMenuItems)
{
    this->salesDate = salesDate;
    this->menuItemName = menuItemName;
    this->totalQuantity = totalQuantity;
    this->totalRevenue = totalRevenue;
    this->isAllMenuItems = isAllMenuItems;
}

vOrderSales::~vOrderSales()
{
    
}

std::string vOrderSales::getSalesDate()
{
    return salesDate;
}

std::string vOrderSales::getMenuItemName()
{
    return menuItemName;
}

int vOrderSales::getTotalQuantity()
{
    return totalQuantity;
}

double vOrderSales::getTotalRevenue()
{
    return totalRevenue;
}

bool vOrderSales::getIsAllMenuItems()
{
    return isAllMenuItems;
}


std::string vOrderSales::tableName() const
{
    return "vOrderSales";
}

std::vector<std::string> vOrderSales::columns() const
{
    return { "salesDate", "menuItemName", "totalQuantity", "totalRevenue", "isAllMenuItems" };
}

std::set<std::string> vOrderSales::keys() const
{
    return { };
}

bool vOrderSales::isAutoGeneratedKey() const
{
    return false;
}

std::map<std::string, std::any> vOrderSales:: toMap() const
{
    std::map<std::string, std::any> mMap;
    mMap[columns()[0]] = salesDate;
    mMap[columns()[1]] = menuItemName;
    mMap[columns()[2]] = totalQuantity;
    mMap[columns()[3]] = totalRevenue;
    mMap[columns()[4]] = isAllMenuItems;

    return mMap;
}

Model * vOrderSales::fromMap(std::map<std::string, std::any> mMap) const
{
    std::string mSalesDate = std::any_cast<std::string>(mMap[columns()[0]]);
    std::string mMenuItemName = std::any_cast<std::string>(mMap[columns()[1]]);
    int mTotalQuantity = std::any_cast<int>(mMap[columns()[2]]);
    double mTotalRevenue = std::any_cast<double>(mMap[columns()[3]]);
    bool mIsAllMenuItems = std::any_cast<int>(mMap[columns()[4]]);
    vOrderSales *model = new vOrderSales(mSalesDate, mMenuItemName, mTotalQuantity, mTotalRevenue, mIsAllMenuItems);

    return model;
}
