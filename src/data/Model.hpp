//
//  Model.hpp
//  DAL Test
//
//  Created by Julian Koksal on 2022-09-25.
//
//  Abstract class representing a table in the database.

#ifndef Model_hpp
#define Model_hpp

#include <string>
#include <any>
#include <set>
#include <map>

class Model
{
    friend class DBHelper;
protected:
    // The name of the SQL table that this model represents.
    std::string tableName;
    
    // The primary key(s) of the SQL table.
    std::set<std::string> keys;
    
    // The name of an INTEGER PRIMARY KEY column that should have a unique value automatically chosen when inserting.
    // Empty string if no such column exists, or if its values should not be chosen automatically.
    std::string autoGeneratedKey;
    
    // Returns a map representation of this object where for each member variable there is a key value pair where
    // the key is the name of the member variable and the value is the value of the member variable.
    virtual std::map<std::string, std::any> toMap() const = 0;
    
    // Returns a pointer to a new object with member variables initialized according to mMap.
    // mMap is a map representing the object, as created by a call to toMap().
    virtual Model * fromMap(std::map<std::string, std::any> mMap) const = 0;
};

#endif /* Model_hpp */
