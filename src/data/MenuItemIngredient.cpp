//
// Created by Sharon Nikritin on 2022-11-07.
//

#include "MenuItemIngredient.hpp"

MenuItemIngredient ::MenuItemIngredient(std::string menuItemName, int inventoryItemID, int quantity) {
    this -> menuItemName = menuItemName;
    this -> inventoryItemID = inventoryItemID;
    this -> quantity = quantity;
}

MenuItemIngredient :: ~MenuItemIngredient() {

}

std::string MenuItemIngredient ::getMenuItemName() {
    return menuItemName;
}

int MenuItemIngredient ::getInventoryItemID() {
    return inventoryItemID;
}

int MenuItemIngredient ::getQuantity() {
    return quantity;
}

void MenuItemIngredient ::setMenuItemName(std::string menuItemName) {
    this -> menuItemName = menuItemName;
}

void MenuItemIngredient ::setInventoryItemID(int inventoryItemID) {
    this -> inventoryItemID = inventoryItemID;
}

void MenuItemIngredient ::setQuantity(int quantity) {
    this -> quantity = quantity;
}


std::string MenuItemIngredient::tableName() const
{
    return "MenuItemIngredient";
}

std::vector<std::string> MenuItemIngredient::columns() const
{
    return { "inventoryItemID", "menuItemName", "quantity" };
}

std::set<std::string> MenuItemIngredient::keys() const
{
    return { columns()[0], columns()[1] };
}

bool MenuItemIngredient::isAutoGeneratedKey() const
{
    return false;
}

std::map<std::string, std::any> MenuItemIngredient:: toMap() const
{
    std::map<std::string, std::any> mMap;
    mMap[columns()[0]] = inventoryItemID;
    mMap[columns()[1]] = menuItemName;
    mMap[columns()[2]] = quantity;

    return mMap;
}

Model * MenuItemIngredient::fromMap(std::map<std::string, std::any> mMap) const
{
    int mID = std::any_cast<int>(mMap[columns()[0]]);
    std::string mName = std::any_cast<std::string>(mMap[columns()[1]]);
    int mQuantity = std::any_cast<int>(mMap[columns()[2]]);
    MenuItemIngredient *model = new MenuItemIngredient(mName, mID, mQuantity);

    return model;
}
