//
//  OrderMaster.cpp
//
//  Created by Julian Koksal on 2022-11-07.
//

#include "OrderMaster.hpp"

OrderMaster::OrderMaster(int orderNumber, std::string orderedBy, std::string orderDate, std::string status, std::string sessionID)
{
    this->orderNumber = orderNumber;
    this->orderedBy = orderedBy;
    this->orderDate = orderDate;
    this->status = status;
    this->sessionID = sessionID;
}

OrderMaster::~OrderMaster() {}

int OrderMaster::getOrderNumber()
{
    return orderNumber;
}

std::string OrderMaster::getOrderedBy()
{
    return orderedBy;
}

std::string OrderMaster::getOrderDate()
{
    return orderDate;
}

std::string OrderMaster::getStatus()
{
    return status;
}

std::string OrderMaster::getSessionID()
{
    return sessionID;
}

void OrderMaster::setOrderedBy(std::string val)
{
    orderedBy = val;
}

void OrderMaster::setOrderDate(std::string val)
{
    orderDate = val;
}

void OrderMaster::setStatus(std::string val)
{
    status = val;
}

void OrderMaster::setSessionID(std::string val)
{
    sessionID = val;
}

std::string OrderMaster::tableName() const
{
    return "OrderMaster";
}

std::vector<std::string> OrderMaster::columns() const
{
    return {"orderNumber", "orderedBy", "orderDate", "status", "sessionID"};
}

std::set<std::string> OrderMaster::keys() const
{
    return {columns()[0]};
}

bool OrderMaster::isAutoGeneratedKey() const
{
    return true;
}

std::map<std::string, std::any> OrderMaster::toMap() const
{
    std::map<std::string, std::any> mMap;
    mMap[columns()[0]] = orderNumber;
    mMap[columns()[1]] = orderedBy;
    mMap[columns()[2]] = orderDate;
    mMap[columns()[3]] = status;
    mMap[columns()[4]] = sessionID;

    return mMap;
}

Model *OrderMaster::fromMap(std::map<std::string, std::any> mMap) const
{
    int mOrderNumber = std::any_cast<int>(mMap[columns()[0]]);
    std::string mOrderedBy = std::any_cast<std::string>(mMap[columns()[1]]);
    std::string mOrderDate = std::any_cast<std::string>(mMap[columns()[2]]);
    std::string mStatus = std::any_cast<std::string>(mMap[columns()[3]]);
    std::string mSessionID = std::any_cast<std::string>(mMap[columns()[4]]);

    OrderMaster *model = new OrderMaster(mOrderNumber, mOrderedBy, mOrderDate, mStatus, mSessionID);
    return model;
}
