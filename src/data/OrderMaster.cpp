//
//  OrderMaster.cpp
//
//  Created by Julian Koksal on 2022-11-07.
//

#include "OrderMaster.hpp"

OrderMaster::OrderMaster(int orderNumber, std::string orderedBy, std::string orderDate, bool isComplete)
{
    this->tableName = "OrderMaster";
    this->columns = { "orderNumber", "orderedBy", "orderDate", "isComplete" };
    this->keys = { columns[0] };
    this->isAutoGeneratedKey = true;
    
    this->orderNumber = orderNumber;
    this->orderedBy = orderedBy;
    this->orderDate = orderDate;
    this->isComplete = isComplete;
}

OrderMaster::~OrderMaster()
{
    
}

std::map<std::string, std::any> OrderMaster::toMap() const
{
    std::map<std::string, std::any> mMap;
    mMap[columns[0]] = orderNumber;
    mMap[columns[1]] = orderedBy;
    mMap[columns[2]] = orderDate;
    mMap[columns[3]] = isComplete;
    
    return mMap;
}

Model * OrderMaster::fromMap(std::map<std::string, std::any> mMap) const
{
    int mOrderNumber = std::any_cast<int>(mMap[columns[0]]);
    std::string mOrderedBy = std::any_cast<std::string>(mMap[columns[1]]);
    std::string mOrderDate = std::any_cast<std::string>(mMap[columns[2]]);
    bool mIsComplete = std::any_cast<int>(mMap[columns[3]]);
    
    OrderMaster *model = new OrderMaster(mOrderNumber, mOrderedBy, mOrderDate, mIsComplete);
    return model;
}

int OrderMaster::getOrderNumber()
{
    return orderNumber;
}

std::string OrderMaster::getOrderedBy()
{
    return orderedBy;
}

std::string OrderMaster::getOrderDate()
{
    return orderDate;
}

bool OrderMaster::getIsComplete()
{
    return isComplete;
}

void OrderMaster::setOrderedBy(std::string val)
{
    orderedBy = val;
}

void OrderMaster::setOrderDate(std::string val)
{
    orderDate = val;
}

void OrderMaster::setIsComplete(bool val)
{
    isComplete = val;
}
