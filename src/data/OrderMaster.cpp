//
//  OrderMaster.cpp
//
//  Created by Julian Koksal on 2022-11-07.
//

#include "OrderMaster.hpp"

OrderMaster::OrderMaster(int orderNumber, std::string orderedBy, std::string orderDate, bool isComplete)
{
    this->tableName = "OrderMaster";
    this->keys = { "orderNumber" };
    this->autoGeneratedKey = "orderNumber";
    
    this->orderNumber = orderNumber;
    this->orderedBy = orderedBy;
    this->orderDate = orderDate;
    this->isComplete = isComplete;
}

OrderMaster::~OrderMaster()
{
    
}

std::map<std::string, std::any> OrderMaster::toMap()
{
    std::map<std::string, std::any> mMap;
    mMap["orderNumber"] = orderNumber;
    mMap["orderedBy"] = orderedBy;
    mMap["orderDate"] = orderDate;
    mMap["isComplete"] = isComplete;
    
    return mMap;
}

Model * OrderMaster::fromMap(std::map<std::string, std::any> mMap)
{
    int mOrderNumber = std::any_cast<int>(mMap["orderNumber"]);
    std::string mOrderedBy = std::any_cast<std::string>(mMap["orderedBy"]);
    std::string mOrderDate = std::any_cast<std::string>(mMap["orderDate"]);
    bool mIsComplete = std::any_cast<int>(mMap["isComplete"]);
    
    OrderMaster *model = new OrderMaster(mOrderNumber, mOrderedBy, mOrderDate, mIsComplete);
    return model;
}

int OrderMaster::getOrderNumber()
{
    return orderNumber;
}

std::string OrderMaster::getOrderedBy()
{
    return orderedBy;
}

std::string OrderMaster::getOrderDate()
{
    return orderDate;
}

bool OrderMaster::getIsComplete()
{
    return isComplete;
}

void OrderMaster::setOrderedBy(std::string val)
{
    orderedBy = val;
}

void OrderMaster::setOrderDate(std::string val)
{
    orderDate = val;
}

void OrderMaster::setIsComplete(bool val)
{
    isComplete = val;
}
